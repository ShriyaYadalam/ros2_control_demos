<?xml version="1.0"?>
<robot name="2wheeldrive" xmlns:xacro="http://ros.org/wiki/xacro">
   
<xacro:property name = "base_length" value = "0.45"/>  
<xacro:property name = "base_width" value = "0.35"/> 
<xacro:property name = "base_height" value = "0.12"/> 

<xacro:property name = "wheel_radius" value = "0.06"/> 
<xacro:property name = "wheel_width" value = "0.03"/> 

<xacro:property name = "caster_radius" value = "0.04"/>  

<xacro:property name="wheel_ygap" value="0.025"/>
<xacro:property name="wheel_zoff" value="0.03"/> 
<xacro:property name="wheel_xoff" value="0.0"/> 
<xacro:property name="caster_xoff" value="0.14"/>

 
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro> 

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r"> 
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>


<link name = "base_link"> 
    <visual> 
        <geometry>
            <box size = "${base_length} ${base_width} ${base_height}"/>
        </geometry>
        <material name = "Red">
            <color rgba = "1.0 0 0 1.0"/>
        </material>  
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry> 
    </collision>
</link>

<link name = "base_footprint"> 
    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
</link>
 
<joint name = "base_joint" type = "fixed">
    <parent link = "base_link"/>
    <child link = "base_footprint"/> 
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
</joint>

<xacro:macro name = "wheel" params = "prefix x_reflect y_reflect"> 
    <link name = "${prefix}_link">
        <visual>
            <origin xyz = "0 0 0" rpy = "${pi/2} 0 0"/> 
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_width}"/>
            </geometry>
            <material name = "Gray">
                <color rgba = "0.5 0.5 0.5 1.0"/>
            </material> 
        </visual> 
 
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>  
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision> 
      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>

    </link>

    <joint name = "${prefix}_joint" type = "continuous"> 
        <parent link = "base_link"/>
        <child link = "${prefix}_link"/>
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-0.04}" rpy="0 0 0"/>
        <axis xyz = "0 1 0"/>
    </joint>
</xacro:macro>

<xacro:wheel prefix = "drive_l" x_reflect = "-1" y_reflect = "1"/>
<xacro:wheel prefix = "drive_r" x_reflect = "-1" y_reflect = "-1"/>

<xacro:macro name="caster" params="prefix x_pos y_pos">
    <link name="${prefix}_link">  
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
        <geometry>
          <sphere radius = "${caster_radius}"/>
        </geometry>
        <material name="Black">
          <color rgba="0.1 0.1 0.1 1.0"/>  
        </material>
      </visual>
      
   <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${caster_radius}"/>


    </link>  

    <joint name="${prefix}_swivel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_pos} ${y_pos} ${-caster_radius-0.02}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>  
  </xacro:macro>  

  <xacro:caster prefix="caster_fl" x_pos="${base_length/2-caster_radius}" y_pos="${base_width/2-caster_radius}"/>
  <xacro:caster prefix="caster_fr" x_pos="${base_length/2-caster_radius}" y_pos="${-base_width/2+caster_radius}"/>
  <xacro:caster prefix="caster_bl" x_pos="${-base_length/2+caster_radius}" y_pos="${base_width/2-caster_radius}"/>
  <xacro:caster prefix="caster_br" x_pos="${-base_length/2+caster_radius}" y_pos="${-base_width/2+caster_radius}"/>
 


<link name="imu_link">
  <visual> 
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
  </visual>

  <collision>
    <geometry>
      <box size="0.05 0.05 0.05"/>
    </geometry>
  </collision>

  <xacro:box_inertia m="0.1" w="0.05" d="0.05" h="0.05"/>
</link>

<joint name="imu_joint" type="fixed">  
  <parent link="base_link"/>
  <child link="imu_link"/>
  <origin xyz="0 0 0.01"/>
</joint>

 <gazebo reference="imu_link">
  <sensor name="imu_sensor" type="imu">
   <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <ros>
        <namespace>/demo</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
  </sensor>
</gazebo>


<gazebo>
  <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
    <ros>
      <namespace>/demo</namespace>
    </ros>

    <left_joint>drive_l_joint</left_joint>
    <right_joint>drive_r_joint</right_joint>

    <wheel_separation>0.35</wheel_separation> 
    <wheel_diameter>0.12</wheel_diameter>

    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf> 
    <publish_wheel_tf>true</publish_wheel_tf>

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>

<ros2_control name="ros2_control_diffdrive" type="system">
        <hardware>
            <plugin>ros2_control_demo_example_2/DiffBotSystemHardware</plugin>
            <param name="left_wheel_name">drive_l_joint</param> 
            <param name="right_wheel_name">drive_r_joint</param> 
            <param name="enc_counts_per_rev">366</param>             
        </hardware> 

        <joint name = "drive_l_joint">
            <command_interface name = "velocity">
                <param name = "min">-10</param> 
                <param name = "max">10</param>
            </command_interface>
            <state_interface name = "position"/>
            <state_interface name = "velocity"/> 
        </joint>

        <joint name = "drive_r_joint">
            <command_interface name = "velocity">
                <param name = "min">-10</param>
                <param name = "max">10</param>  
            </command_interface>
            <state_interface name = "position"/>
            <state_interface name = "velocity"/>
        </joint>
  </ros2_control>
 
<link name="lidar_link">
  <visual>
    <geometry>
      <cylinder length="0.05" radius="0.03"/>
    </geometry>
    <material name = "Cyan">
    <color rgba = "0 1 1 1"/>
    </material>
  </visual>
  <collision>
    <geometry>
      <cylinder length="0.05" radius="0.03"/>
    </geometry>
  </collision>
  <inertial>
    <mass value="0.1"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1e-5" ixy="0" ixz="0" iyy="1e-5" iyz="0" izz="1e-5"/>
  </inertial>
</link>

<joint name="lidar_joint" type="fixed">
  <parent link="base_link"/>
  <child link="lidar_link"/>
  <origin xyz="0 0 0.1" rpy="0 0 0"/>
</joint> 

<gazebo reference="lidar_link">
  <sensor name="laser" type="ray">
    <pose>0 0 0 0 0 0</pose>  
    <!-- <always_on>true</always_on> -->
    <update_rate>20</update_rate>
    <visualize>true</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-3.1415926</min_angle>
          <max_angle>3.1415926</max_angle>
        </horizontal> 
      </scan>
      <range>
        <min>0.1</min>
        <max>10.0</max>
        <resolution>0.01</resolution>  
      </range>   
     <!-- <noise>   
        <type>gaussian</type>  
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise> -->
    </ray> 
    <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <!-- <namespace>/demo</namespace> --> 
        <remapping>~/out:=scan</remapping>
        <!-- <topicName>scan</topicName>  -->
      </ros> 
      <output_type>sensor_msgs/LaserScan</output_type>      
      <frame_name>lidar_link</frame_name>
    </plugin>   
  </sensor>
</gazebo> 
 




<xacro:macro name="ultrasonic" params="prefix x_reflect y_reflect">
  <link name="${prefix}_link">  
    <visual>  
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.04 0.04 0.02"/>  
      </geometry>
      <material name="Yellow">
        <color rgba="0.8 0.8 0.1 1"/>  
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/> 
      <geometry>
        <box size="0.04 0.04 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  
  <joint name="${prefix}_joint" type="fixed">
    <parent link="base_link"/>
    <child link="${prefix}_link"/>
    <origin xyz="${x_reflect} ${y_reflect} 0" rpy="0 0 0"/>   
  </joint>

  <gazebo reference="${prefix}_link">
    <sensor name="${prefix}_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>20</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>   
            <samples>10</samples>
            <resolution>1</resolution>  
            <min_angle>-0.1</min_angle> 
            <max_angle>0.1</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.02</min>
          <max>5.0</max> 
          <resolution>0.01</resolution>
        </range> 
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="${prefix}_plugin" filename="libgazebo_ros_ray_sensor.so">     
        <ros__parameters> 
          <topic_name>/demo/${prefix}_ultrasonic_scan</topic_name>
          <frame_name>${prefix}_link</frame_name>
        </ros__parameters>
      </plugin>
    </sensor>  
  </gazebo>
</xacro:macro>

<xacro:ultrasonic prefix="ultrasonic_front_right"  x_reflect="0.225"  y_reflect="-0.1"/>
<xacro:ultrasonic prefix="ultrasonic_front_left" x_reflect="0.225"  y_reflect="0.1"/>

<xacro:ultrasonic prefix="ultrasonic_back_right"   x_reflect="-0.225" y_reflect="-0.1"/>
<xacro:ultrasonic prefix="ultrasonic_back_left"  x_reflect="-0.225" y_reflect="0.1"/>
 

</robot>     
